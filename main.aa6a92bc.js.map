{"version":3,"sources":["src/CST.ts","src/scenes/LoadScene.ts","src/scenes/MenuScene.ts","src/CharacterSprite.ts","src/scenes/PlayScene.ts","src/main.ts"],"names":[],"mappings":"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","file":"main.aa6a92bc.js","sourceRoot":"..","sourcesContent":["export const CST:any = {\r\n    SCENCES: {\r\n        LOAD: \"LOAD\",\r\n        MENU: \"MENU\",\r\n        PLAY: \"PLAY\"\r\n    },\r\n    IMAGES: {\r\n        LOGO: \"logo.png\",\r\n        OPTIONS: \"options_button.png\",\r\n        PLAY: \"play_button.png\",\r\n        TITLE: \"title_bg.jpg\"\r\n    },\r\n    AUDIO: {\r\n        TITLE: \"shuinvy-childhood.mp3\"\r\n    },\r\n    SPRITES: {\r\n        CAT: \"cat.png\"\r\n    }\r\n}\r\n","import { CST } from \"../CST\";\r\n\r\nexport class LoadScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENCES.LOAD\r\n        });\r\n    }\r\n\r\n    init() {\r\n    }\r\n\r\n    loadImages() {\r\n        this.load.setPath(\"./assets/image\");\r\n\r\n        for(let prop in CST.IMAGES) {\r\n            this.load.image(CST.IMAGES[prop], CST.IMAGES[prop]);\r\n        }\r\n    }\r\n\r\n    loadAudio() {\r\n        this.load.setPath(\"./assets/audio\");\r\n\r\n        for(let prop in CST.AUDIO) {\r\n            this.load.audio(CST.AUDIO[prop], CST.AUDIO[prop]);\r\n        }\r\n    }\r\n\r\n    loadSprites(frameConfig?: Phaser.Loader.FileTypes.ImageFrameConfig) {\r\n        this.load.setPath(\"./assets/sprite\");\r\n\r\n        for(let prop in CST.SPRITES) {\r\n            this.load.spritesheet(CST.SPRITES[prop], CST.SPRITES[prop], frameConfig);\r\n        }\r\n    }\r\n\r\n    preload() {\r\n\r\n        this.load.spritesheet(\"anna\", \"./assets/sprite/anna.png\", { frameHeight: 64, frameWidth: 64 });\r\n        this.load.spritesheet(\"rapier\", \"./assets/sprite/WEAPON_rapier.png\", {frameWidth: 192, frameHeight: 192})\r\n\r\n        // Load Atlases\r\n        this.load.atlas(\"characters\", \"./assets/atlas/characters.png\", \"./assets/atlas/characters.json\");\r\n        this.load.atlas(\"daze\", \"./assets/atlas/daze.png\", \"./assets/atlas/daze.json\");\r\n\r\n        // Load Images, Spritesheets, Sound\r\n        this.loadImages();\r\n        this.loadAudio();\r\n        this.loadSprites({\r\n            frameHeight: 32,\r\n            frameWidth: 32\r\n        });\r\n\r\n        // Create Loading Bar\r\n        var loadingBar = this.add.graphics({\r\n            fillStyle: {\r\n                color: 0xffffff // White\r\n            }\r\n        });\r\n\r\n        // Simulate Large Load\r\n        /*\r\n        for(let i=0; i < 100; i++) {\r\n            this.load.spritesheet(\"cat\"+i, \"./dist/assets/sprite/cat.png\", {\r\n                frameHeight: 32,\r\n                frameWidth: 32\r\n            }); \r\n        }\r\n        */\r\n       \r\n        /* Loader Events:\r\n            complete - When Done Loading Everything\r\n            progress - Loader Number Progress in Decimal\r\n        */\r\n       this.load.on(\"progress\", (percent: number) => {\r\n           loadingBar.fillRect(0, this.game.renderer.height / 2, this.game.renderer.width * percent, 50);\r\n           console.log(percent);\r\n       });\r\n       this.load.on(\"complete\", () => {\r\n        // this.scene.start(CST.SCENCES.MENU);\r\n       }); \r\n       this.load.on(\"load\", (file: Phaser.Loader.File) => {\r\n           console.log(file.src);\r\n       });\r\n    }\r\n\r\n    create() {\r\n        this.scene.start(CST.SCENCES.MENU);\r\n    }\r\n\r\n    update() {\r\n    }\r\n}","import { CST } from \"../CST\";\r\n\r\nexport class MenuScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENCES.MENU\r\n        });\r\n    }\r\n\r\n    init() {\r\n        \r\n    }\r\n\r\n    preload() {\r\n\r\n    }\r\n\r\n    create() {\r\n        \r\n        // Create Images\r\n        this.add.image(this.game.renderer.width / 2, this.game.renderer.height * 0.20, CST.IMAGES.LOGO).setDepth(1);\r\n        this.add.image(0,0, CST.IMAGES.TITLE).setOrigin(0, 0).setDepth(0);\r\n        let playButton: Phaser.GameObjects.Image = this.add.image(this.game.renderer.width / 2, this.game.renderer.height / 2, CST.IMAGES.PLAY).setDepth(1);\r\n        let optionsButton: Phaser.GameObjects.Image = this.add.image(this.game.renderer.width / 2, this.game.renderer.height / 2 + 100, CST.IMAGES.OPTIONS).setDepth(1);\r\n\r\n        // Create Sprites\r\n        let hoverSprite: Phaser.GameObjects.Sprite = this.add.sprite(100,100, CST.SPRITES.CAT);\r\n        hoverSprite.setScale(2);\r\n        hoverSprite.setVisible(false);\r\n\r\n        // Create Audio\r\n        // this.sound.pauseOnBlur = false;\r\n        this.sound.play(CST.AUDIO.TITLE, {\r\n            loop: true\r\n        });\r\n\r\n        // Create Animations\r\n        this.anims.create({\r\n            key: \"walk\",\r\n            frameRate: 4,\r\n            repeat: -1,  // Repeat Forever\r\n            frames: this.anims.generateFrameNumbers(CST.SPRITES.CAT, {\r\n                frames: [0, 1, 2, 3]\r\n            })\r\n        })\r\n\r\n        /*\r\n            PointerEvents:\r\n                pointerover - Hovering\r\n                pointerout - Not Hovering\r\n                pointerup - Click and Release\r\n                pointerdown - Just Click\r\n        */\r\n\r\n        // Config Play Button\r\n        playButton.setInteractive();\r\n        playButton.on(\"pointerover\", () => {\r\n            hoverSprite.setVisible(true);\r\n            hoverSprite.x = playButton.x - playButton.width;\r\n            hoverSprite.y = playButton.y;\r\n            hoverSprite.anims.play(\"walk\");\r\n        });\r\n        playButton.on(\"pointerout\", () => {\r\n            hoverSprite.setVisible(false);\r\n            // hoverSprite.anims.pause();\r\n        });\r\n        playButton.on(\"pointerup\", () => {\r\n            this.scene.start(CST.SCENCES.PLAY);\r\n        });\r\n\r\n        // Config Options Button\r\n        optionsButton.setInteractive();\r\n        optionsButton.on(\"pointerover\", () => {\r\n            hoverSprite.setVisible(true);\r\n            hoverSprite.x = optionsButton.x - optionsButton.width;\r\n            hoverSprite.y = optionsButton.y;\r\n            hoverSprite.anims.play(\"walk\");\r\n        });\r\n        optionsButton.on(\"pointerout\", () => {\r\n            hoverSprite.setVisible(false);\r\n            // hoverSprite.anims.pause();\r\n        });\r\n        optionsButton.on(\"pointerup\", () => {\r\n            // this.scene.launch();\r\n        });\r\n    }\r\n\r\n    update() {\r\n    }\r\n}","export class CharacterSprite extends Phaser.Physics.Arcade.Sprite {\r\n    hp!: number;\r\n    \r\n    constructor(scene: Phaser.Scene, x: number, y: number, texture: string, frame?: string | number) {\r\n        super(scene, x, y, texture, frame);\r\n        \r\n        scene.physics.world.enableBody(this);\r\n        \r\n        scene.sys.updateList.add(this);\r\n        scene.sys.displayList.add(this);\r\n\r\n        this.setScale(2);\r\n        this.setOrigin(0, 0);\r\n        this.setImmovable(true);\r\n\r\n        this.hp = 10;\r\n    }\r\n \r\n\r\n}","import { CST } from \"../CST\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { CharacterSprite } from \"../CharacterSprite\";\r\n\r\nexport class PlayScene extends Phaser.Scene {\r\n    player!: Phaser.GameObjects.Container;\r\n    anna!: Phaser.Physics.Arcade.Sprite;\r\n    hooded!: Phaser.Physics.Arcade.Sprite;\r\n    assassins!: Phaser.Physics.Arcade.Group;\r\n    fireAttacks!: Phaser.Physics.Arcade.Group;\r\n    keyboard!: { [index: string]: Phaser.Input.Keyboard.Key};\r\n\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENCES.PLAY  \r\n        });\r\n    }\r\n    \r\n    init() {\r\n    }\r\n\r\n    preload() {\r\n\r\n        this.textures.addSpriteSheetFromAtlas(\"mandy\", {frameHeight: 64, frameWidth: 64, atlas: \"characters\", frame: \"mandy\"});\r\n\r\n        this.anims.create({\r\n            key: \"mandyswordleft\",\r\n            frameRate: 5,\r\n            frames: this.anims.generateFrameNumbers(\"mandy\", {\r\n                start: 169,\r\n                end: 174\r\n            })\r\n        });\r\n\r\n        this.anims.create({\r\n            key: \"swordleft\",\r\n            frameRate: 5,\r\n            frames: this.anims.generateFrameNumbers(\"rapier\", {\r\n                start: 6,\r\n                end: 11\r\n            }),\r\n            showOnStart: true,\r\n            hideOnComplete: true\r\n        });\r\n\r\n        this.anims.create({\r\n            key: \"left\",\r\n            frameRate: 10,\r\n            frames: this.anims.generateFrameNumbers(\"anna\", {\r\n                start: 9,\r\n                end: 17\r\n            })\r\n        });\r\n\r\n        this.anims.create({\r\n            key: \"down\",\r\n            frameRate: 10,\r\n            frames: this.anims.generateFrameNumbers(\"anna\", {\r\n                start: 18,\r\n                end: 26\r\n            })\r\n        });\r\n\r\n        this.anims.create({\r\n            key: \"up\",\r\n            frameRate: 10,\r\n            frames: this.anims.generateFrameNumbers(\"anna\", {\r\n                start: 0,\r\n                end: 8\r\n            })\r\n        });\r\n\r\n        this.anims.create({\r\n            key: \"right\",\r\n            frameRate: 10,\r\n            frames: this.anims.generateFrameNumbers(\"anna\", {\r\n                start: 27,\r\n                end: 35\r\n            })\r\n        });\r\n\r\n        this.anims.create({\r\n            key: \"blaze\",\r\n            frameRate: 50,\r\n            frames: this.anims.generateFrameNames(\"daze\", {\r\n                prefix: \"fire0\",\r\n                suffix: \".png\",\r\n                start: 0,\r\n                end: 55\r\n            }),\r\n            showOnStart: true,\r\n            hideOnComplete: true\r\n        });\r\n        \r\n        this.textures.addSpriteSheetFromAtlas(\"hooded\", {frameHeight: 64, frameWidth: 64, atlas: \"characters\", frame: \"hooded\"});\r\n\r\n        this.load.image(\"terrain\", \"./assets/image/terrain_atlas.png\");\r\n        this.load.image(\"items\", \"./assets/image/items.png\");\r\n\r\n        this.load.tilemapTiledJSON(\"mappy\", \"./assets/maps/mappy.json\");\r\n\r\n    }\r\n\r\n    create() {\r\n        // debugger;\r\n        this.player = this.add.container(200, 200, [this.add.sprite(0, 0, \"mandy\", 26), this.add.sprite(0, 0, \"rapier\",).setVisible(false)])\r\n        .setDepth(1).setScale(2);\r\n\r\n        // Phaser 3.16 changes \"keydown_F\" to \"keydown-F\"\r\n        this.input.keyboard.on(\"keydown-F\", () => {\r\n            (this.player.list[0] as Phaser.GameObjects.Sprite).play(\"mandyswordleft\");\r\n            (this.player.list[1] as Phaser.GameObjects.Sprite).play(\"swordleft\");\r\n        });\r\n\r\n        this.anna = new CharacterSprite(this, 400, 400, \"anna\", 26);\r\n        this.hooded = new CharacterSprite(this, 200, 200, \"hooded\", 26);\r\n        this.fireAttacks = this.physics.add.group();\r\n        this.assassins = this.physics.add.group({immovable: true});\r\n        this.assassins.add(this.hooded);    \r\n\r\n        // this.physics.add.existing() --> Manual Add\r\n\r\n        window.hooded = this.hooded;\r\n        window.anna = this.anna;\r\n\r\n        /*\r\n        GameObject Events:\r\n            animationstart\r\n            animationrepeat\r\n            animationupdate\r\n            animationcomplete\r\n        */\r\n       \r\n\r\n        this.keyboard = this.input.keyboard.addKeys(\"W, A, S, D\");\r\n        this.input.on(\"pointermove\", (pointer: Phaser.Input.Pointer) => {\r\n            if(pointer.isDown) {    // Is Clicking\r\n                let fire = this.add.sprite(pointer.worldX, pointer.worldY, \"daze\", \"fire00.png\").play(\"blaze\");\r\n                this.fireAttacks.add(fire);\r\n                fire.on(\"animation.complete\", () => {\r\n                    fire.destroy();\r\n                })\r\n            } \r\n\r\n            console.log(pointer.x + \" and the y \" + pointer.y);\r\n        })\r\n\r\n        this.physics.world.addCollider(this.anna, this.hooded, (anna: CharacterSprite, hooded: CharacterSprite) => {\r\n            anna.hp--;\r\n\r\n            if(anna.hp <= 0) {\r\n                anna.destroy();\r\n            }\r\n            \r\n            hooded.destroy();\r\n\r\n            console.log(\"colliding\");\r\n        });\r\n\r\n        this.physics.world.addCollider(this.fireAttacks, this.assassins, (fireAttacks: Phaser.Physics.Arcade.Sprite, hooded: Phaser.Physics.Arcade.Sprite) => {\r\n            fireAttacks.destroy();\r\n            hooded.destroy();\r\n\r\n            for(let i = 0; i < 2; i++){\r\n                this.assassins.add(new CharacterSprite(this, 200, 200, \"hooded\", 26));\r\n            }\r\n        });\r\n\r\n        let mappy = this.add.tilemap(\"mappy\");\r\n\r\n        let terrain = mappy.addTilesetImage(\"terrain_atlas\", \"terrain\");\r\n        let items = mappy.addTilesetImage(\"items\");\r\n\r\n        // Layers\r\n        let botLayer = mappy.createStaticLayer(\"bot\", [terrain], 0, 0).setDepth(-1);\r\n        let topLayer = mappy.createDynamicLayer(\"top\", [terrain], 0, 0);\r\n\r\n        // Map Collisions\r\n        this.physics.add.collider(this.anna, topLayer);\r\n            // By Tile Property\r\n            topLayer.setCollisionByProperty({collides:true});\r\n            // By Tile Indexes\r\n            topLayer.setCollision([269,270,271,301,302,303,333,334,335]);\r\n            \r\n        // Map Events\r\n            // By Location\r\n            topLayer.setTileLocationCallback(10, 8, 1, 1, () => {\r\n                alert(\"The Sword Calls to You!\");\r\n\r\n                // Top prevent message from popping-up, need to call same function recursively\r\n                //@ts-ignore\r\n                topLayer.setTileLocationCallback(10, 8, 1, 1, null);\r\n            })\r\n            // By Index\r\n            topLayer.setTileIndexCallback([272,273,274,304,305,306,336,337,338], () => {\r\n                console.log(\"Stop Stepping in Lava\");\r\n            }, this);\r\n\r\n            // Interactive Items from Object Layer\r\n            let items = mappy.createFromObjects(\"pickup\", 1114, { key: CST.SPRITES.CAT }).map((sprite: Phaser.GameObjects.Sprite) => {\r\n                sprite.setScale(2);\r\n                sprite.setInteractive();\r\n            })\r\n\r\n            this.input.on(\"gameobjectdown\", (pointer: Phaser.Input.Pointer, obj: Phaser.GameObjects.Sprite) => {\r\n                obj.destroy();\r\n            })\r\n\r\n            this.input.on(\"pointerdown\", (pointer: Phaser.Input.Pointer) => {\r\n\r\n                // Pixel Position to Tile Position\r\n                let tile = mappy.getTileAt(mappy.worldToTileX(pointer.x), mappy.worldToTileY(pointer.y))\r\n\r\n                if(tile) {\r\n                    console.log(tile);\r\n                }\r\n            })\r\n\r\n            this.cameras.main.startFollow(this.anna);\r\n            this.physics.world.setBounds(0, 0, mappy.widthInPixels, mappy.heightInPixels);\r\n\r\n            // Show Layer Hit Boxes\r\n            // topLayer.renderDebug(this.add.graphics());\r\n    }\r\n\r\n    update(time: number, delta: number) {   // Delta 16.666 @ 60 fps\r\n\r\n        for(let i = 0; i < this.assassins.getChildren().length; i++) {\r\n            this.physics.accelerateToObject(this.assassins.getChildren()[i], this.anna);\r\n        }\r\n\r\n        if(this.anna.active === true) {\r\n            if(this.keyboard.D.isDown === true) {\r\n                this.anna.setVelocityX(64);\r\n                this.anna.play(\"right\", true);\r\n            }\r\n\r\n            if (this.keyboard.W.isDown === true) {\r\n                this.anna.setVelocityY(-64);\r\n                this.anna.play(\"up\", true);\r\n            }\r\n\r\n            if(this.keyboard.A.isDown === true){\r\n                this.anna.setVelocityX(-64);\r\n                this.anna.anims.playReverse(\"left\", true);\r\n            }\r\n\r\n            if (this.keyboard.S.isDown === true) {\r\n                this.anna.setVelocityY(64);\r\n                this.anna.play(\"down\", true);\r\n            }\r\n\r\n            if(this.keyboard.A.isUp && this.keyboard.D.isUp) { // Not Moving on X-Axis\r\n                this.anna.setVelocityX(0);\r\n                // this.anna.anims.stop();\r\n            }\r\n\r\n            if(this.keyboard.W.isUp && this.keyboard.S.isUp) { // Not Moving on Y-Axis\r\n                this.anna.setVelocityY(0);\r\n                // this.anna.anims.stop();\r\n            }\r\n        }\r\n    }\r\n}","/** @type {import(\"../typings/phaser\")} */\r\n \r\nimport { LoadScene } from \"./scenes/LoadScene\";\r\nimport { MenuScene } from \"./scenes/MenuScene\";\r\nimport { PlayScene } from \"./scenes/PlayScene\";\r\n\r\nlet game = new Phaser.Game({\r\n    width: 800,\r\n    height: 600, \r\n    scene: [LoadScene, MenuScene, PlayScene],\r\n    render: {\r\n        pixelArt: true\r\n    },\r\n    physics: {\r\n        default: \"arcade\",\r\n        arcade: {\r\n            debug: true\r\n        }\r\n    },\r\n    scale: {\r\n        mode: Phaser.Scale.FIT,\r\n        autoCenter: Phaser.Scale.CENTER_BOTH\r\n    }\r\n});"]}